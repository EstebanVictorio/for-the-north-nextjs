{"version":3,"sources":["webpack:///./src/pages/posts.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/media/x-small.js","webpack:///./src/components/media/small.js","webpack:///./src/components/media/medium.js","webpack:///./src/components/media/large.js","webpack:///./src/components/media/x-large.js","webpack:///./src/components/media/index.js","webpack:///./src/components/navbar.js","webpack:///./src/components/sidebar.js","webpack:///./src/components/layout/index.js","webpack:///./src/components/list.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","components_layout__WEBPACK_IMPORTED_MODULE_2__","components_list__WEBPACK_IMPORTED_MODULE_3__","Posts","posts","a","createElement","className","to","ordered","elements","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape","XSmall","createGlobalStyle","_templateObject","Small","small_templateObject","Medium","medium_templateObject","Large","large_templateObject","XLarge","x_large_templateObject","Media","media","children","MatchedMedia","matchMedia","react_default","StyledNavbar","styled","nav","navbar_templateObject","Navbar","gatsby_browser_entry","StyledSidebar","aside","sidebar_templateObject","Sidebar","_useState","useState","open","setOpen","type","onClick","src","GlobalStyle","layout_templateObject","StyledLayout","main","_templateObject2","Layout","setMedia","selectedMedia","useEffect","window","matches","innerWidth","Fragment","components_media","navbar","sidebar","StyledList","ul","StyledOrderedList","ol","List","react__WEBPACK_IMPORTED_MODULE_1___default","map","element"],"mappings":"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","file":"component---src-pages-posts-js-2315db10f42428a6f2be.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport Layout from 'components/layout'\nimport List from 'components/list'\n\n\nconst Posts = () => {\n  const posts = [\n    <Link className=\"navigation-link\" to=\"/basics\">How to React, really fast - Part 1: Pages</Link>\n  ]\n\n\n  return (\n    <Layout>\n      <List ordered elements={posts}/>\n    </Layout>\n  )\n}\n\nexport default Posts","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { createGlobalStyle } from 'styled-components'\n\nconst XSmall = createGlobalStyle``\n\nexport default XSmall","import { createGlobalStyle } from 'styled-components'\n\nconst Small = createGlobalStyle``\n\nexport default Small","import { createGlobalStyle } from 'styled-components'\n\nconst Medium = createGlobalStyle``\n\nexport default Medium","import { createGlobalStyle } from 'styled-components'\n\nconst Large = createGlobalStyle``\n\nexport default Large","import { createGlobalStyle } from 'styled-components'\n\nconst XLarge = createGlobalStyle``\n\nexport default XLarge","import React from 'react'\nimport Small from './x-small'\nimport XSmall from './small'\nimport Medium from './medium'\nimport Large from './large'\nimport XLarge from './x-large'\n\nconst matchMedia = (media) => {\n  switch(media) {\n    case 'sm':\n      return Small\n    case 'md':\n      return Medium\n    case 'lg':\n      return Large\n    case 'xl':\n        return XLarge\n    case 'xs':\n    default:\n      return XSmall\n  }\n}\n\nconst Media = ({ media, children }) => {\n  const MatchedMedia = matchMedia(media)\n  return (\n  <MatchedMedia>\n    { children }\n  </MatchedMedia>\n  )\n  \n}\n\nexport default Media","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\n\nconst StyledNavbar = styled.nav`\n  background: linear-gradient(to bottom right,darkblue, purple);\n  width: 100%;\n  height: 60px;\n  display: flex;\n  align-items: center;\n  grid-area: navbar;\n  .brand-navigation {\n    color: whitesmoke;\n    text-decoration: none;\n    padding: 0 0.5em;\n    font-size: 32px;\n  }\n`\n\nconst Navbar = () => (\n  <StyledNavbar>\n    <Link className=\"brand-navigation\" to=\"/\">\n      <span className=\"brand\">FTN</span>\n    </Link>\n  </StyledNavbar>\n)\n\nexport default Navbar","import React, {useState} from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nconst StyledSidebar = styled.aside`\n  background-color: purple;\n  height: calc(100vh - 60px);\n  transition: width 0.1s linear;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  grid-area: sidebar;\n  &.open {\n    width: 120px;\n  }\n\n  &.closed {\n    width: 60px;\n  }\n\n  .toggle {\n    height: 60px;\n    box-sizing: border-box;\n    background-color: transparent;\n    background-position: center;\n    background-size: 40px 40px;\n    background-repeat: no-repeat;\n    outline: none;\n    border: none;\n    transition: width 0.1s linear;\n    filter: invert(1);\n  }\n\n  .toggle:hover {\n    background-color: cyan;\n    filter: none;\n  }\n\n  .open {\n    width: 120px;\n    background-image: url('./img/arrow-left.svg');\n  }\n\n  .closed {\n    width: 60px;\n    background-image: url('./img/arrow-right.svg');\n  }\n\n\n  .navigation-link {\n    text-decoration: none;\n    box-sizing: border-box;\n    padding: 0.5em 1em;\n    color: whitesmoke;\n    font-size: 20px;\n  }\n\n  .nav-content {\n    display: flex;\n    align-items: center;\n  }\n\n  .nav-description {\n    margin: 0 5px;\n  }\n\n  .navigation-link:hover {\n    background-color: cyan;\n    color: black;\n  }\n\n  .navigation-link:hover > .nav-content > .nav-icon {\n    filter: none;\n  }\n\n\n\n  .nav-open {\n    width: 120px;\n  }\n\n  .nav-closed > .nav-content > .nav-description {\n    display: none;\n  }\n\n  .nav-closed {\n    width: 60px;\n  }\n\n  .nav-icon {\n    filter: invert(1);\n  }\n`\n\nconst Sidebar = () => {\n  const [open, setOpen] = useState(true)\n  const handleOpenClick = () => setOpen(!open)\n  return (\n    <StyledSidebar className={open ? 'open' : 'closed'}>\n      <input className={open ? 'toggle open' : 'toggle closed'} type=\"button\" onClick={handleOpenClick} />\n        <Link className={open ? \"navigation-link nav-open\" : \"navigation-link nav-closed\"} to=\"/posts\">\n          <span className=\"nav-content\">\n            <img className=\"nav-icon\" src=\"img/forum.svg\"/>\n            <span className=\"nav-description\">Posts</span>\n          </span>\n        </Link>\n        <Link className={open ? \"navigation-link nav-open\" : \"navigation-link nav-closed\"} to=\"/about\">\n          <span className=\"nav-content\">\n            <img className=\"nav-icon\" src=\"img/help.svg\"/>\n            <span className=\"nav-description\">About</span>\n          </span>\n        </Link>\n    </StyledSidebar>\n  )\n}\nexport default Sidebar","import React,{ useState , useEffect } from 'react'\nimport styled, { createGlobalStyle } from 'styled-components'\nimport Media from 'components/media'\nimport Navbar from 'components/navbar'\nimport Sidebar from 'components/sidebar'\n\nconst GlobalStyle = createGlobalStyle`\n  @font-face {\n      src: url('./fonts/Neutra-Text-Bold.otf') format('opentype');\n      font-family: bFont;\n  }\n  html, body {\n    margin: 0;\n    padding: 0;\n    background-color: #282c44;\n    font-family: bFont;\n  }\n  \n`\n\nconst StyledLayout = styled.main`\n  color: whitesmoke;\n  display: grid;\n  grid-template-areas:\n    \"navbar navbar\"\n    \"sidebar main-content\";\n  grid-template-columns: minmax(min-content,max-content) 1fr;\n  grid-template-rows: repeat(minmax(min-content,max-content),2) ;\n\n  .content {\n    grid-area: main-content;\n    height: calc(100vh - 60px);\n    overflow-y: auto;\n  }\n`\n\nconst useMedia = () => {\n  const [media, setMedia] = useState('xs')\n  useEffect(() => {\n    if(window.matchMedia(\"min-width: 144px\").matches){\n      setMedia('xs')\n    } else if(window.matchMedia(\"min-width: 240px\").matches) {\n      setMedia('sm')\n    } else if(window.matchMedia(\"min-width: 420px\").matches) {\n      setMedia('md')\n    } else if(window.matchMedia(\"min-width: 720px\").matches) {\n      setMedia('lg')\n    } else if(window.matchMedia(\"min-width: 1080px\").matches) {\n      setMedia('xl')\n    }\n  }, window.innerWidth)\n  return media\n}\n\nconst Layout = ({ children }) => {\n  const selectedMedia = useMedia()\n  \n  return (\n    <>\n      <GlobalStyle />\n      <Media media={selectedMedia} />\n        <StyledLayout>\n          <Navbar />\n          <Sidebar />\n            <div className=\"content\">\n              { children }\n            </div>\n        </StyledLayout>\n    </>\n  )\n}\n\nexport default Layout","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledList = styled.ul`\n`\n\nconst StyledOrderedList = styled.ol`\n  .navigation-link {\n    box-sizing: border-box;\n    padding: 0.5em 1em;\n    color: whitesmoke;\n    font-size: 20px;\n  }\n`\n\nconst List = ({ elements, ordered }) => (\n  ordered ? (\n    <StyledOrderedList>\n      { elements.map(element => <li>{element}</li>) }\n    </StyledOrderedList>\n  ) : (\n    <StyledList>\n    { elements.map(element => <li>{element}</li>) }\n    </StyledList>\n  )\n)\n\nexport default List"],"sourceRoot":""}