{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/media/x-small.js","webpack:///./src/components/media/small.js","webpack:///./src/components/media/medium.js","webpack:///./src/components/media/large.js","webpack:///./src/components/media/x-large.js","webpack:///./src/components/media/index.js","webpack:///./src/components/navbar.js","webpack:///./src/components/sidebar.js","webpack:///./src/components/layout/index.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","components_layout__WEBPACK_IMPORTED_MODULE_1__","About","a","createElement","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape","XSmall","createGlobalStyle","_templateObject","Small","small_templateObject","Medium","medium_templateObject","Large","large_templateObject","XLarge","x_large_templateObject","Media","media","children","MatchedMedia","matchMedia","react_default","StyledNavbar","styled","nav","withConfig","componentId","Navbar","gatsby_browser_entry","className","to","StyledSidebar","aside","Sidebar","_useState","useState","open","setOpen","type","onClick","src","GlobalStyle","layout_templateObject","StyledLayout","main","Layout","selectedMedia","Fragment","components_media","navbar","sidebar"],"mappings":"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","file":"component---src-pages-about-js-661db37e51595b5b71ee.js","sourcesContent":["import React from 'react'\nimport Layout from 'components/layout'\n\nconst About = () => <Layout></Layout>\n\nexport default About","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { createGlobalStyle } from 'styled-components'\n\nconst XSmall = createGlobalStyle``\n\nexport default XSmall","import { createGlobalStyle } from 'styled-components'\n\nconst Small = createGlobalStyle``\n\nexport default Small","import { createGlobalStyle } from 'styled-components'\n\nconst Medium = createGlobalStyle``\n\nexport default Medium","import { createGlobalStyle } from 'styled-components'\n\nconst Large = createGlobalStyle``\n\nexport default Large","import { createGlobalStyle } from 'styled-components'\n\nconst XLarge = createGlobalStyle``\n\nexport default XLarge","import React from 'react'\nimport Small from './x-small'\nimport XSmall from './small'\nimport Medium from './medium'\nimport Large from './large'\nimport XLarge from './x-large'\n\nconst matchMedia = (media) => {\n  switch(media) {\n    case 'sm':\n      return Small\n    case 'md':\n      return Medium\n    case 'lg':\n      return Large\n    case 'xl':\n        return XLarge\n    case 'xs':\n    default:\n      return XSmall\n  }\n}\n\nconst Media = ({ media, children }) => {\n  const MatchedMedia = matchMedia(media)\n  return (\n  <MatchedMedia>\n    { children }\n  </MatchedMedia>\n  )\n  \n}\n\nexport default Media","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\n\nconst StyledNavbar = styled.nav`\n  background: linear-gradient(to bottom right,darkblue, purple);\n  width: 100%;\n  height: 60px;\n  display: flex;\n  align-items: center;\n  grid-area: navbar;\n  .brand-navigation {\n    color: whitesmoke;\n    text-decoration: none;\n    padding: 0 0.5em;\n    font-size: 32px;\n  }\n`\n\nconst Navbar = () => (\n  <StyledNavbar>\n    <Link className=\"brand-navigation\" to=\"/\">\n      <span className=\"brand\">FTN</span>\n    </Link>\n  </StyledNavbar>\n)\n\nexport default Navbar","import React, {useState} from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nconst StyledSidebar = styled.aside`\n  background-color: purple;\n  height: calc(100vh - 60px);\n  transition: width 0.1s linear;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  grid-area: sidebar;\n  &.open {\n    width: 120px;\n  }\n\n  &.closed {\n    width: 60px;\n  }\n\n  .toggle {\n    height: 60px;\n    box-sizing: border-box;\n    background-color: transparent;\n    background-position: center;\n    background-size: 40px 40px;\n    background-repeat: no-repeat;\n    outline: none;\n    border: none;\n    transition: width 0.1s linear;\n    filter: invert(1);\n  }\n\n  .toggle:hover {\n    background-color: cyan;\n    filter: none;\n  }\n\n  .open {\n    width: 120px;\n    background-image: url('/for-the-north-nextjs/img/arrow-left.svg');\n  }\n\n  .closed {\n    width: 60px;\n    background-image: url('/for-the-north-nextjs/img/arrow-right.svg');\n  }\n\n\n  .navigation-link {\n    text-decoration: none;\n    box-sizing: border-box;\n    padding: 0.5em 1em;\n    color: whitesmoke;\n    font-size: 20px;\n  }\n\n  .nav-content {\n    display: flex;\n    align-items: center;\n  }\n\n  .nav-description {\n    margin: 0 5px;\n  }\n\n  .navigation-link:hover {\n    background-color: cyan;\n    color: black;\n  }\n\n  .navigation-link:hover > .nav-content > .nav-icon {\n    filter: none;\n  }\n\n\n\n  .nav-open {\n    width: 120px;\n  }\n\n  .nav-closed > .nav-content > .nav-description {\n    display: none;\n  }\n\n  .nav-closed {\n    width: 60px;\n  }\n\n  .nav-icon {\n    filter: invert(1);\n  }\n`\n\nconst Sidebar = () => {\n  const [open, setOpen] = useState(true)\n  const handleOpenClick = () => setOpen(!open)\n  return (\n    <StyledSidebar className={open ? 'open' : 'closed'}>\n      <input className={open ? 'toggle open' : 'toggle closed'} type=\"button\" onClick={handleOpenClick} />\n        <Link className={open ? \"navigation-link nav-open\" : \"navigation-link nav-closed\"} to=\"/posts\">\n          <span className=\"nav-content\">\n            <img className=\"nav-icon\" src=\"/for-the-north-nextjs/img/forum.svg\"/>\n            <span className=\"nav-description\">Posts</span>\n          </span>\n        </Link>\n        <Link className={open ? \"navigation-link nav-open\" : \"navigation-link nav-closed\"} to=\"/about\">\n          <span className=\"nav-content\">\n            <img className=\"nav-icon\" src=\"/for-the-north-nextjs/img/help.svg\"/>\n            <span className=\"nav-description\">About</span>\n          </span>\n        </Link>\n    </StyledSidebar>\n  )\n}\nexport default Sidebar","import React,{ useState , useEffect } from 'react'\nimport styled, { createGlobalStyle } from 'styled-components'\nimport Media from 'components/media'\nimport Navbar from 'components/navbar'\nimport Sidebar from 'components/sidebar'\n\nconst GlobalStyle = createGlobalStyle`\n  @font-face {\n      src: url('/for-the-north-nextjs/fonts/Neutra-Text-Bold.otf') format('opentype');\n      font-family: bFont;\n  }\n  html, body {\n    margin: 0;\n    padding: 0;\n    background-color: #282c44;\n    font-family: bFont;\n  }\n  \n`\n\nconst StyledLayout = styled.main`\n  color: whitesmoke;\n  display: grid;\n  grid-template-areas:\n    \"navbar navbar\"\n    \"sidebar main-content\";\n  grid-template-columns: minmax(min-content,max-content) 1fr;\n  grid-template-rows: repeat(minmax(min-content,max-content),2) ;\n\n  .content {\n    grid-area: main-content;\n    height: calc(100vh - 60px);\n    overflow-y: auto;\n  }\n`\n\nconst useMedia = () => {\n  const [media, setMedia] = useState('xl')\n  // useEffect(() => {\n  //   if(window.matchMedia(\"min-width: 144px\").matches){\n  //     setMedia('xs')\n  //   } else if(window.matchMedia(\"min-width: 240px\").matches) {\n  //     setMedia('sm')\n  //   } else if(window.matchMedia(\"min-width: 420px\").matches) {\n  //     setMedia('md')\n  //   } else if(window.matchMedia(\"min-width: 720px\").matches) {\n  //     setMedia('lg')\n  //   } else if(window.matchMedia(\"min-width: 1080px\").matches) {\n  //     setMedia('xl')\n  //   }\n  // }, window.innerWidth)\n  return media\n}\n\nconst Layout = ({ children }) => {\n  const selectedMedia = useMedia()\n  \n  return (\n    <>\n      <GlobalStyle />\n      <Media media={selectedMedia} />\n        <StyledLayout>\n          <Navbar />\n          <Sidebar />\n            <div className=\"content\">\n              { children }\n            </div>\n        </StyledLayout>\n    </>\n  )\n}\n\nexport default Layout"],"sourceRoot":""}