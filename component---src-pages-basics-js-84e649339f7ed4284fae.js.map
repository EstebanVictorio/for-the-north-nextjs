{"version":3,"sources":["webpack:///./src/components/post-heading.js","webpack:///./src/components/post-paragraph.js","webpack:///./src/pages/basics.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/media/x-small.js","webpack:///./src/components/media/small.js","webpack:///./src/components/media/medium.js","webpack:///./src/components/media/large.js","webpack:///./src/components/media/x-large.js","webpack:///./src/components/media/index.js","webpack:///./src/components/navbar.js","webpack:///./src/components/sidebar.js","webpack:///./src/components/layout/index.js","webpack:///./src/components/list.js"],"names":["StyledPostHeading","styled","h1","_templateObject","PostHeading","_ref","children","react_default","a","createElement","StyledPostParagraph","p","post_paragraph_templateObject","PostParagraph","StyledLink","basics_templateObject","StyledImgWrapper","div","_templateObject2","Basics","layout","post_heading","post_paragraph","target","rel","href","list","elements","src","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape","XSmall","createGlobalStyle","Small","small_templateObject","Medium","medium_templateObject","Large","large_templateObject","XLarge","x_large_templateObject","Media","media","MatchedMedia","matchMedia","StyledNavbar","nav","navbar_templateObject","Navbar","gatsby_browser_entry","className","to","StyledSidebar","aside","sidebar_templateObject","Sidebar","_useState","useState","open","setOpen","type","onClick","GlobalStyle","layout_templateObject","StyledLayout","main","Layout","setMedia","selectedMedia","useEffect","window","matches","innerWidth","Fragment","components_media","navbar","sidebar","StyledList","ul","StyledOrderedList","ol","List","ordered","react__WEBPACK_IMPORTED_MODULE_1___default","map","element"],"mappings":"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","file":"component---src-pages-basics-js-84e649339f7ed4284fae.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\n\nconst StyledPostHeading = styled.h1`\n  padding: 20px;\n  width: 100%;\n  font-size: 60px;\n  box-sizing: border-box;\n`\n\n\nconst PostHeading = ({ children }) => (\n  <StyledPostHeading>\n    { children }\n  </StyledPostHeading>\n)\n\n\nexport default PostHeading","import React from 'react'\nimport styled from 'styled-components'\n\n\nconst StyledPostParagraph = styled.p`\n  padding: 10px;\n  font-size: 24px;\n  font-weight: 700;\n`\n\n\nconst PostParagraph = ({ children }) => (\n  <StyledPostParagraph>\n    { children }\n  </StyledPostParagraph>\n)\n\nexport default PostParagraph","import React from 'react'\nimport styled from 'styled-components'\nimport Layout from 'components/layout'\nimport PostHeading from 'components/post-heading'\nimport PostParagraph from 'components/post-paragraph'\nimport List from 'components/list'\n\nconst StyledLink = styled.a`\n  color: whitesmoke;\n`\n\nconst StyledImgWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`\n\nconst Basics = () => {\n  const exampleListPoints = [\n    'A Home page, describing highlights of the product.',\n    'An About page, describing why this product exists.',\n    \"A Contact page, letting you know the whereabouts of the\"+\n    \"product's owners and how you might acquire the product.\"\n  ]\n\n  const prerequisitePoints = [\n    'Node JS',\n    'npm/yarn'\n  ]\n\n  const packageJsonConfig = `\n  {\n    \"dependencies\":{\n      \"react\": \"16.8.6\",\n      \"react-dom\": \"16.8.6\",\n      \"next\": \"8.1.0\"\n    },\n    \"scripts\": {\n      \"dev\" : \"next\"\n    }\n  }\n  `\n\n  const indexSample = `\n    import Layout from './../layout'\n\n    const Home = () => (\n      <Layout>\n        <h1>Distraction is over. Meet: The super lettuce.</h1>\n        <p>\n          A bio-engineered super lettuce capable of super concentration powers.\n        </p>\n      </Layout>\n    )\n  \n    export default Home\n  `\n\n\n  const aboutSample = `\n    import Layout from './../layout'\n\n    const About = () => (\n      <Layout>\n        <h4>\n          About the super lettuce.\n        </h4>\n        <div>\n          The super lettuce will grant you inimaginable concentration powers.\n          You will be able to program for hours and not losing a single drop of\n          focus in your entire rush. It is proposed to combat one of many problems\n          in the world: Concentration Loss.\n        </div>\n      </Layout>\n    )\n\n    export default About\n  `\n\n  const contactSample = `\n    import Layout from './../layout'\n\n    const Contact = () => (\n      <Layout>\n        <div>Contact us!</div>\n        <a href=\"mailto:sample@superlettuce.com\">\n          Reach us at our company email!\n        </a>\n      </Layout>\n    )\n\n    export default Contact\n  `\n\n  const folderStructure = `\n    node_modules\n    yarn.lock\n    package.json\n    layout.js\n    /pages\n      index.js\n      about.js\n      contact.js\n  `\n\n  const nextJSFolderStructure = `\n    .next // This is new!\n    node_modules\n    yarn.lock\n    package.json\n    layout.js\n    /pages\n      index.js\n      about.js\n      contact.js\n`\n\n  const layoutComponentSample = `\n    import Link from 'next/link'\n    const Layout = ({ children }) => (\n      <main>\n        <nav>\n          <ul>\n            <li>\n              <Link href=\"/\">\n                <a>Home</a>\n              </Link>\n            </li>\n            <li>\n              <Link href=\"/about\">\n                <a>About</a>\n              </Link>\n            </li>\n            <li>\n              <Link href=\"/contact\">\n                <a>Contact</a>\n              </Link>\n            </li>\n          </ul>\n        </nav>\n        { children }\n      </main>\n    )\n  \n    export default Layout\n  `\n\n  const layoutCommentComponentSample = `\n  // Layout component in layout.js\n  import Layout from './../layout'\n\n  const Home = () => (\n    <Layout> // Wraps 'div'.\n      <div>Home page</div> // <-- Children set\n    </Layout>\n  )\n\n  export default Home\n\n  // Home page component in /pages/index.js\n  import Link from 'next/link'\n  const Layout = ({ children }) => ( // <--- Unwraps children via destructuring\n    <main>\n      <nav>\n        <ul>\n          <li>\n            <Link href=\"/\">\n              <a>Home</a>\n            </Link>\n          </li>\n          <li>\n            <Link href=\"/about\">\n              <a>About</a>\n            </Link>\n          </li>\n          <li>\n            <Link href=\"/contact\">\n              <a>Contact</a>\n            </Link>\n          </li>\n        </ul>\n      </nav>\n      { children } // <--- Children rendered\n    </main>\n  )\n\n  export default Layout\n`\n    const buildMsgs = `\n    [ wait ]  compiling ...\n    [ ready ] compiled successfully\n    [ info ]  ready on http://localhost:3000\n    `\n\n  return (\n    <Layout>\n      <PostHeading>\n        How to React really fast - Part 1: Pages\n      </PostHeading>\n      <PostParagraph>\n        Have you ever found yourself in practicing some React,\n        in your environment, but felt like it was way too much setup\n        for some simple practicing? No worries.\n      </PostParagraph>\n      <PostParagraph>\n        <StyledLink\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://nextjs.org/\"\n        >\n          NextJS\n        </StyledLink> got you covered.\n      </PostParagraph>\n      <PostParagraph>\n        How come do we need to Webpack everytime you ask? That might be the case,\n        but that particular task doesn't everytime land on you, dear developer.\n        We just need to reach out our research a little longer or further.\n        Enter NextJS.\n      </PostParagraph>\n      <PostParagraph>\n        NextJS is a React framework that allows you to deliver your React apps\n        faster.\n      </PostParagraph>\n      <PostParagraph>\n        Let's jump into it. You never buy someone's idea or suggestion without a\n        showcase of it. So... Let's say we want to build just a veeery basic\n        but descriptive page about a product. This might be composed of\n        the following:\n        <List elements={exampleListPoints} />\n      </PostParagraph>\n      <PostParagraph>\n        Before getting onto this, there are two pre-requisites that you need to\n        have installed on your machine:\n        <List elements={prerequisitePoints} />\n      </PostParagraph>\n      <PostParagraph>\n        Being able to start is pretty easy. Open the editor of your choice,\n        choose a folder to work from, and open a terminal on your computer\n        as well. After these minor steps, run any of the following:\n        <PostParagraph>\n        <code>\n          npm i --save next react react-dom\n        </code>\n        <PostParagraph>\n          Or, if you prefer...\n        </PostParagraph>\n        <code>\n          yarn add next react react-dom\n        </code>\n        </PostParagraph>\n      </PostParagraph>\n      <PostParagraph>\n        Now, before beginning to code our pages, there is a tiny step we should\n        do if we do not want to use the terminal (very often). NextJS allows you\n        to start a server which serves your app and your pages along with it, as\n        well as helping you with hot reloading so you don't have to start the\n        server as many times as you would do everytime you performn an update\n        to your code.\n        To do this, we can add the following line to\n        the <code>scripts</code> field in <code>package.json</code>:\n        <PostParagraph>\n          <pre>\n            { packageJsonConfig }\n          </pre>\n        This config allows us to run NextJS in development mode, so we can\n        run <code>yarn dev</code> in the terminal. This is a preference and\n        you might as well use <code>yarn next</code>.\n        </PostParagraph>\n      </PostParagraph>\n      <PostParagraph>\n        Now we're all set to start. The following step is to create a folder\n        named <code>pages</code>, as well as a <code>layout</code> component\n        in our root directory, so we create the following file structure:\n        <pre>\n          <code>\n            { folderStructure }\n           </code>\n        </pre>\n      </PostParagraph>\n      <PostParagraph>\n        Now, we can proceed to code our very first NextJS-based React app.\n        As our main component driving navigation towards the app, we'll build\n        the <code>Layout</code> component:\n        <pre>\n          { layoutComponentSample }\n        </pre>\n      </PostParagraph>\n      <PostParagraph>\n        Let's dive a little into what happens here. First, we need a way to\n        navigate across the site. Of course, we could do this purely with <code>\n          anchor\n        </code> tags, but since we are in a framework, we'll take advantage of\n        the <code>Link</code> component that NextJS provides.\n        This component allows the navigation as if it were an single page app.\n        So, loading will look seamless. Currently, NextJS encourages you to\n        still enclose the text content inside an <code>anchor</code> tag\n        due to deprecation using text-only, but that makes no harm to the\n        navigation.\n      </PostParagraph>\n      <PostParagraph>\n        Something to point out here is that we're using a very particular\n        syntax here, called <code>destructuring assignment</code>. We're\n        not diving here too deep into that, but this is a feature of the\n        ES6 standard, which lets you unwrap the property values you send/inject\n        to a component in an attribute-like manner in your code. Since React\n        wraps everything into the <code>props</code> argument, using\n        destructuring the <code>props</code> object will give you access to\n        all of the properties you provided. If you try to unwrap a property\n        that's not injected, you will get the <code>undefined</code> value.\n        This is JavaScript behavior itself, not a React one.\n      </PostParagraph>\n      <PostParagraph>\n        One last thing here that allows us to have the <code>nav</code>\n        element in all pages is the property <code>children</code>.\n        This property represents the elements that are wrapped inside a\n        component when used:\n        <pre>\n        { layoutCommentComponentSample }\n        </pre>\n      </PostParagraph>\n      <PostParagraph>\n        Now, for our first page, there's <code>index.js</code>, which will respond\n        automatically to the <code>/</code> route. We would write something\n        like:\n        <pre>\n          {\n            indexSample\n          }\n        </pre>\n        This would tell NextJS that this is our first page module.\n      </PostParagraph>\n      <PostParagraph>\n        Then, we'll write our <code>/about</code> page code, describing the\n        product:\n        <pre>\n          { aboutSample }\n        </pre>\n      </PostParagraph>\n      <PostParagraph>\n        And finally, the last page, where we'll let our users to check where\n        they can reach the company out, the <code>/contact</code> page:\n        <pre>\n          { contactSample }\n        </pre>\n      </PostParagraph>\n      <PostParagraph>\n        After this, we can run the command we set at the\n        <code>scripts</code> field in <code>package.json</code>,\n        which is <code>npm dev</code> or <code>yarn dev</code>,\n        depending on your package manager.\n        Running that command will lead you to having the following structure:\n        <pre>\n        {\n          nextJSFolderStructure\n        }\n        </pre>\n      </PostParagraph>\n      <PostParagraph>\n        When that folder appears, it means that Next built your app, which\n        means that you also got some messages like the following:\n        <pre>\n          {\n            buildMsgs\n          }\n        </pre>\n      </PostParagraph>\n      <PostParagraph>\n        This means that your app is ready to be used, and you can access it via \n        entering <code>http://localhost:300</code> in the address bar,\n        which will lead to something like this:\n      </PostParagraph>\n      <StyledImgWrapper>\n      <img src=\"https://media.giphy.com/media/LOzodNjCkZ2ufrk7Vo/giphy.gif\" />\n      </StyledImgWrapper>\n      <PostParagraph>\n        What happened is that Next took care of using Webpack under the hood\n        for the required dependencies to create and develop our app, so we can\n        completely focus on the features rather than the setup. This is a way\n        we can at least get some momentum on diving deep in case we want to\n        learn further or analyze our options at the time of choosing how we want\n        to React in different use cases. This one of those, and it lets us\n        step forward relatively fast.\n      </PostParagraph>\n      <PostParagraph>\n        And that's it! You created a web app that has a tiny setup letting you\n        develop your features in a comfortable way!\n      </PostParagraph>\n    </Layout>\n  )\n}\n\n\nexport default Basics","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { createGlobalStyle } from 'styled-components'\n\nconst XSmall = createGlobalStyle``\n\nexport default XSmall","import { createGlobalStyle } from 'styled-components'\n\nconst Small = createGlobalStyle``\n\nexport default Small","import { createGlobalStyle } from 'styled-components'\n\nconst Medium = createGlobalStyle``\n\nexport default Medium","import { createGlobalStyle } from 'styled-components'\n\nconst Large = createGlobalStyle``\n\nexport default Large","import { createGlobalStyle } from 'styled-components'\n\nconst XLarge = createGlobalStyle``\n\nexport default XLarge","import React from 'react'\nimport Small from './x-small'\nimport XSmall from './small'\nimport Medium from './medium'\nimport Large from './large'\nimport XLarge from './x-large'\n\nconst matchMedia = (media) => {\n  switch(media) {\n    case 'sm':\n      return Small\n    case 'md':\n      return Medium\n    case 'lg':\n      return Large\n    case 'xl':\n        return XLarge\n    case 'xs':\n    default:\n      return XSmall\n  }\n}\n\nconst Media = ({ media, children }) => {\n  const MatchedMedia = matchMedia(media)\n  return (\n  <MatchedMedia>\n    { children }\n  </MatchedMedia>\n  )\n  \n}\n\nexport default Media","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\n\nconst StyledNavbar = styled.nav`\n  background: linear-gradient(to bottom right,darkblue, purple);\n  width: 100%;\n  height: 60px;\n  display: flex;\n  align-items: center;\n  grid-area: navbar;\n  .brand-navigation {\n    color: whitesmoke;\n    text-decoration: none;\n    padding: 0 0.5em;\n    font-size: 32px;\n  }\n`\n\nconst Navbar = () => (\n  <StyledNavbar>\n    <Link className=\"brand-navigation\" to=\"/\">\n      <span className=\"brand\">FTN</span>\n    </Link>\n  </StyledNavbar>\n)\n\nexport default Navbar","import React, {useState} from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nconst StyledSidebar = styled.aside`\n  background-color: purple;\n  height: calc(100vh - 60px);\n  transition: width 0.1s linear;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  grid-area: sidebar;\n  &.open {\n    width: 120px;\n  }\n\n  &.closed {\n    width: 60px;\n  }\n\n  .toggle {\n    height: 60px;\n    box-sizing: border-box;\n    background-color: transparent;\n    background-position: center;\n    background-size: 40px 40px;\n    background-repeat: no-repeat;\n    outline: none;\n    border: none;\n    transition: width 0.1s linear;\n    filter: invert(1);\n  }\n\n  .toggle:hover {\n    background-color: cyan;\n    filter: none;\n  }\n\n  .open {\n    width: 120px;\n    background-image: url('./img/arrow-left.svg');\n  }\n\n  .closed {\n    width: 60px;\n    background-image: url('./img/arrow-right.svg');\n  }\n\n\n  .navigation-link {\n    text-decoration: none;\n    box-sizing: border-box;\n    padding: 0.5em 1em;\n    color: whitesmoke;\n    font-size: 20px;\n  }\n\n  .nav-content {\n    display: flex;\n    align-items: center;\n  }\n\n  .nav-description {\n    margin: 0 5px;\n  }\n\n  .navigation-link:hover {\n    background-color: cyan;\n    color: black;\n  }\n\n  .navigation-link:hover > .nav-content > .nav-icon {\n    filter: none;\n  }\n\n\n\n  .nav-open {\n    width: 120px;\n  }\n\n  .nav-closed > .nav-content > .nav-description {\n    display: none;\n  }\n\n  .nav-closed {\n    width: 60px;\n  }\n\n  .nav-icon {\n    filter: invert(1);\n  }\n`\n\nconst Sidebar = () => {\n  const [open, setOpen] = useState(true)\n  const handleOpenClick = () => setOpen(!open)\n  return (\n    <StyledSidebar className={open ? 'open' : 'closed'}>\n      <input className={open ? 'toggle open' : 'toggle closed'} type=\"button\" onClick={handleOpenClick} />\n        <Link className={open ? \"navigation-link nav-open\" : \"navigation-link nav-closed\"} to=\"/posts\">\n          <span className=\"nav-content\">\n            <img className=\"nav-icon\" src=\"img/forum.svg\"/>\n            <span className=\"nav-description\">Posts</span>\n          </span>\n        </Link>\n        <Link className={open ? \"navigation-link nav-open\" : \"navigation-link nav-closed\"} to=\"/about\">\n          <span className=\"nav-content\">\n            <img className=\"nav-icon\" src=\"img/help.svg\"/>\n            <span className=\"nav-description\">About</span>\n          </span>\n        </Link>\n    </StyledSidebar>\n  )\n}\nexport default Sidebar","import React,{ useState , useEffect } from 'react'\nimport styled, { createGlobalStyle } from 'styled-components'\nimport Media from 'components/media'\nimport Navbar from 'components/navbar'\nimport Sidebar from 'components/sidebar'\n\nconst GlobalStyle = createGlobalStyle`\n  @font-face {\n      src: url('./fonts/Neutra-Text-Bold.otf') format('opentype');\n      font-family: bFont;\n  }\n  html, body {\n    margin: 0;\n    padding: 0;\n    background-color: #282c44;\n    font-family: bFont;\n  }\n  \n`\n\nconst StyledLayout = styled.main`\n  color: whitesmoke;\n  display: grid;\n  grid-template-areas:\n    \"navbar navbar\"\n    \"sidebar main-content\";\n  grid-template-columns: minmax(min-content,max-content) 1fr;\n  grid-template-rows: repeat(minmax(min-content,max-content),2) ;\n\n  .content {\n    grid-area: main-content;\n    height: calc(100vh - 60px);\n    overflow-y: auto;\n  }\n`\n\nconst useMedia = () => {\n  const [media, setMedia] = useState('xs')\n  useEffect(() => {\n    if(window.matchMedia(\"min-width: 144px\").matches){\n      setMedia('xs')\n    } else if(window.matchMedia(\"min-width: 240px\").matches) {\n      setMedia('sm')\n    } else if(window.matchMedia(\"min-width: 420px\").matches) {\n      setMedia('md')\n    } else if(window.matchMedia(\"min-width: 720px\").matches) {\n      setMedia('lg')\n    } else if(window.matchMedia(\"min-width: 1080px\").matches) {\n      setMedia('xl')\n    }\n  }, window.innerWidth)\n  return media\n}\n\nconst Layout = ({ children }) => {\n  const selectedMedia = useMedia()\n  \n  return (\n    <>\n      <GlobalStyle />\n      <Media media={selectedMedia} />\n        <StyledLayout>\n          <Navbar />\n          <Sidebar />\n            <div className=\"content\">\n              { children }\n            </div>\n        </StyledLayout>\n    </>\n  )\n}\n\nexport default Layout","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledList = styled.ul`\n`\n\nconst StyledOrderedList = styled.ol`\n  .navigation-link {\n    box-sizing: border-box;\n    padding: 0.5em 1em;\n    color: whitesmoke;\n    font-size: 20px;\n  }\n`\n\nconst List = ({ elements, ordered }) => (\n  ordered ? (\n    <StyledOrderedList>\n      { elements.map(element => <li>{element}</li>) }\n    </StyledOrderedList>\n  ) : (\n    <StyledList>\n    { elements.map(element => <li>{element}</li>) }\n    </StyledList>\n  )\n)\n\nexport default List"],"sourceRoot":""}